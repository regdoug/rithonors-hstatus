<?php
/**
 * @file hstatus.module
 * 
 * This file must be located in the hstatus folder and is loaded on every
 * page.
 */

/**
 * Implements hook_menu_alter to set MyStatus as the default user page.
 * 
 * The usual user/view page is retained for users w/o an Honors status
 * and for compatibility.
 */
  
/* hook_menu_alter is called by drupal after all hook_menu hooks are 
 * done.  hook_menu is called whenever a module is enabled or disabled
 * to update the internal page registry.  hook_menu_alter allow
 * 
 * Note that every page has a built-in permissions callback ("access callback")
 * that determines if (1) it should be shown in menus and (2) if a user
 * can visit it (throws a 403 on false)
 */
function hstatus_menu_alter(&$items){
    /* the array key gives the path.  note the % sign which indicates an
     * argument.  The 'user' after the % indicates that argument should
     * be the return value of the function 'user_load' instead of the actual
     * argument, which will be an integer. Also note that this may not be
     * the path the user sees because modules are allowed to alias any 
     * path name they want.
     */

//this was user/%user_uid_optional
  $items['user/%user/view'] = array(
    'title' => 'My account',
    'title callback' => 'user_page_title',
    'title arguments' => array(1),
    'page callback' => 'user_view',
    'page arguments' => array(1),
    'access callback' => 'user_view_access',
    'access arguments' => array(1),
        'type' => MENU_LOCAL_TASK,
    'parent' => '',
    'file' => 'user.pages.inc',
    'module' => 'user',
  );

//this was user/%user/view
  $items['user/%user/mystatus'] = array(
    'title' => 'MyStatus',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
    'module' => 'hstatus',
  );

//this was user/%user/mystatus
    $items['user/%user_uid_optional'] = array(
        //menu title
        'title' => 'My Status',
        //function to generate the HTML content
        'page callback' => 'hstatus_user_page',
        //arguments to be passed to the preceding function
        //it is an array because multiple arguments can be passed.
        //1 means the first argument.
        'page arguments' => array(1),
        //file that the page function is located in (relative to module directory)
        'file' => 'hstatus.pages.inc',
        //In hook_menu, the module is automatically filled in, but in hook_menu_alter it must be specified
        'module' => 'hstatus',
        //function to decide if the user has permissions
    'access callback' => 'user_view_access',
        //arguments to the preceding function
    'access arguments' => array(1),
    );
    return $items;
}

/**
 * Implements hook_perm
 * 
 * Just returns an array of strings to be used on the permissions page
 */
function hstatus_perm(){
    return array('view all myStatus pages','view myStatus');
}

/**
 * Implements hook_theme
 * 
 * hook_theme defines "theme hooks" which are just functions or files that
 * generate HTML.  The benefit of doing this is that it makes it easy for
 * other modules or themes to override your display.
 */
function hstatus_theme($existing, $type, $theme, $path){
    return array(
        //renders the mystatus page
        'hstatus_mystatus' => array(
            //this is the file that generates the output
            //relative to module directory, less the .tpl.php
            'template' => 'mystatus',
            //the file in which the preprocessor is located.
            //preprocessors define variables for the template.
            'file' => 'hstatus.pages.inc',
            //arguments passed to the 'theme' function and the preprocessor
            'arguments' => array('user' => NULL),
        ),
    );
}
