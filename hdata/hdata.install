<?php

/**
 * hdata.install
 *
 * Installs the schema for the honors student tables
 * (the same as the tables for the old site)
 */

/**
 * Implements hook_install.
 *
 * Run when the module is installed (NOTE: this is different that enable!)
 */
function hdata_install(){
    //calls hdata_schema and creates db tables
    drupal_install_schema('hdata');
}

/**
 * Implements hook_uninstall
 *
 * Run when a module is uninstalled (NOTE: this is different than disable!)
 */
function hdata_uninstall(){
    //calls hdata_schema and deletes db tables
    drupal_uninstall_schema('hdata');
}

/*
 * hook_update_N functions
 * http://api.drupal.org/api/drupal/developer!hooks!install.php/function/hook_update_N/6
 *
 * Whenever you make a change that requires a patch to the database
 * (such as a change in the schema, you need to write a hook_update_N
 * function.
 *
 * Database updates consist of 3 parts:
 *   - 1 digit for Drupal core compatibility
 *   - 1 digit for your module's major release version
 *      (e.g. is this the 5.x-1.* (1) or 5.x-2.* (2) series of your module?)
 *   - 2 digits for sequential counting starting with 00
 */

/**
 * hdata_update_6000 creates the new h_cldrafts table
 *
 * Added by Reginald Pierce on 05/01/2012
 */
function hdata_update_6000(){
    $schema = hdata_schema();
    $ret = array();
    db_create_table($ret, 'h_cldrafts', $schema['h_cldrafts']);
    return $ret;
}

/**
 * hdata_update_6001 implements a new complearning system.
 *
 * The new system gives more flexibility and it should be more efficient
 * than the old system.  The main changes are
 *  - h_complearning is abandoned (but not deleted)
 *  - A new table h_cl_data will store all submissions
 *  - h_cldrafts and a new table, h_cl, will contain references to
 *    the data in h_cl_data.
 *  - h_cl will support activity types, as per the request of
 *    Complearning Advisor Doug Strouth.
 *
 * Added by Reginald Pierce on 07/01/2012
 */
function hdata_update_6001(){
    $schema = hdata_schema();
    $ret = array();
    //create new tables
    db_create_table($ret, 'h_cl', $schema['h_cl']);
    db_create_table($ret, 'h_cl_data', $schema['h_cl_data']);
    //modify h_cldrafts by dropping and replacing it.
    //the reason I do this is because I don't think that there will be anything
    //valuable there and because it would be difficult to preserve the data.
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //!!!!!!This will cause data loss!!!!!!!
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    db_drop_table($ret, 'h_cldrafts');
    db_create_table($ret, 'h_cldrafts', $schema['h_cldrafts']);
    return $ret;
}

/**
 * Update 6002 is the alpha2 update.  It fixes a wrong column name in
 * h_students_points.  (submittedTime should be submitted)
 */
function hdata_update_6002 (){
    $ret = array();
    db_change_field($ret, 'h_students_points', 'submittedTime', 'submitted', array(
            'description' => t('Time of submission.'),
            'type' => 'datetime',
            'not null' => true
        ));
    return $ret;
}

/**
 * Implements hook_schema
 *
 * Defines the database structure for the hdata module
 *
 * NOTE: If you modify this you MUST create an "update" function or it will
 * not affect any previous installs of this module!
 */
function hdata_schema() {

//convenience function for creating a cache structure to be used by 'cache_set' and 'cache_get'
$s['cache_honors'] = drupal_get_schema_unprocessed('system', 'cache');

//complearning drafts table - allows compatibility with the old table
//and the ability to extend the functionality of the front-end form
$s['h_cldrafts'] = array(
    'description' => t('Complearning Drafts'),
    'fields' => array(
        'uid' => array(
            'description' => t('Drupal UID'),
            'type' => 'int',
            'not null' => true,
        ),
        'updatetime' => array(
            'description' => t('Time that the entry was updated'),
            'type' => 'int',
            'not null' => true,
        ),
        'id' => array(
            'description' => t('Submission id (links to h_cl_two_data)'),
            'type' => 'int',
            'not null' => true,
        ),
    ),
    'primary key' => array('uid'),
);

$s['h_cl'] = array(
    'fields' => array(
        'id' => array(
            'type' => 'serial',
            'description' => t('Submission id'),
            'not null' => true,
        ),
        'uid' => array(
            'description' => t('Drupal UID of submitter'),
            'type' => 'int',
            'not null' => true,
        ),
        'status' => array(
            'description' => t('Submission Status.  0=>pending, 1=>accepted, 2=>rejected'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 0,
        ),
        'hours' => array(
            'description' => t('Total hours in submission'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
        ),
        'types' => array(
            'description' => t('Types of activities in submission'),
            'type' => 'varchar',
            'length' => 140,
        ),
        'submit_date' => array(
            'description' => t('time of submission, in millis'),
            'type' => 'int',
            'not null' => true,
        ),
        'review_date' => array(
            'description' => t('time reviewed, in millis'),
            'type' => 'int',
            'not null' => true,
        ),
        'reviewer_uid' => array(
            'description' => t('Drupal UID of reviewer'),
            'type' => 'int',
            'not null' => true,
            //it is actually faster to change 0 to an integer than to
            //change null to an integer, therefore: default=0.
            'default' => 0,
        ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
        'type' => array('types'),
        'status' => array('status'),
    ),
);

$s['h_cl_data'] = array(
    'fields' => array(
        'id' => array(
            'type' => 'serial',
            'description' => t('Submission id'),
            'not null' => true,
        ),
        'submission' => array(
            'description' => t('Serialized data'),
            'type' => 'blob',
            'size' => 'normal',
        ),
        'review_comments' => array(
            'description' => t('Comments made by reviewers. (optional)'),
            'type' => 'text',
            'size' => 'small',
        ),
    ),
    'primary key' => array('id'),
);

$s['h_faculty'] = array(
    'description' => t('Table of Honors Faculty'),
    'fields' => array(
        'uid' => array(
            'description' => t('Drupal uid'),
            'type' => 'int',
            'not null' => true,
        ),
        'username' => array(
            'description' => t('RIT DCE'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 20,
        ),
        'firstname' => array(
            'description' => t('First name'),
            'type' => 'varchar',
            'length' => 50,
            'not null' => true,
        ),
        'lastname' => array(
            'description' => t('Last name'),
            'type' => 'varchar',
            'length' => 50,
            'not null' => true,
        ),
        'college' => array(
            'description' => t('College Abbreviation'),
            'type' => 'varchar',
            'length' => 10,
            'default' => null,
        ),
        'department' => array(
            'description' => t('Department Code'),
            'type' => 'varchar',
            'length' => 10,
            'default' => null,
        ),
        'phone' => array(
            'description' => t('Phone'),
            'type' => 'varchar',
            'length' => 25,
            'default' => null,
        ),
        'email' => array(
            'description' => t('Preferred Email Address'),
            'type' => 'varchar',
            'length' => 30,
            'default' => null,
        ),
        'office' => array(
            'description' => t('Office Location'),
            'type' => 'varchar',
            'length' => 30,
            'default' => null,
        ),
        'website' => array(
            'description' => t('Personal Website (If applicable)'),
            'type' => 'varchar',
            'length' => 40,
            'default' => null,
        ),
        'account_type' => array(
            'description' => t('Account Type (see h_faculty_types)'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 0,
        ),
    ),
    'primary key' => array('username'),
);
$s['h_faculty_types'] = array(
    'description' => t('types for h_faculty'),
    'fields' => array(
        'id' => array(
            'description' => t('Account Type (see h_faculty_types)'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 0,
        ),
        'code' => array(
            'description' => t('Machine Readable Name'),
            'type' => 'varchar',
            'length' => 10,
            'not null' => true,
        ),
        'name' => array(
            'description' => t('Human Readable Name'),
            'type' => 'varchar',
            'length' => 25,
            'not null' => true,
        ),
        'description' => array(
            'description' => t('Description'),
            'type' => 'varchar',
            'length' => 140,
            'default' => null,
        ),
    ),
    'primary key' => array('id'),
);

//New Legacy Tables (for PeopleSoft)
// ^^ haha, the phrase "New Legacy" looks funny (but it is right)
$s['h_students_peoplesoft'] = array(
    'description' => t('Table of Honors students'),
    'fields' => array(
        'id' => array(
            'description' => t('Drupal uid'),
            'type' => 'int',
            'not null' => true,
        ),
        'username' => array(
            'description' => t('RIT DCE'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 20,
        ),
        'status' => array(
            'description' => t('Honors Status -2=left RIT; -1=withdrawn,0=grad,1=active,2=prefrosh,3=Accepted LE,4=deferred'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
        ),
        'firstname' => array(
            'description' => t('First name'),
            'type' => 'varchar',
            'length' => 50,
            'not null' => true,
        ),
        'lastname' => array(
            'description' => t('Last name'),
            'type' => 'varchar',
            'length' => 50,
            'not null' => true,
        ),
        'college' => array(
            'description' => t('College Abbreviation'),
            'type' => 'varchar',
            'length' => 10,
            'default' => 'NODEG',
            'not null' => true,
        ),
        'planid' => array(
            'description' => t('Plan ID (see the plans table)'),
            'type' => 'int',
            'size' => 'small',
        ),
        'dept' => array(
            'description' => t('Department code'),
            'type' => 'varchar',
            'length' => 10,
        ),
        'gender' => array(
            'description' => t('gender (null means unreported)'),
            //The true database type is enum, but Drupal doesn't
            //understand enums, so I'll pretend it is a char
            'type' => 'char',
            'length' => 1,
        ),
        'yearlevel' => array(
            'description' => t('Year level by credits'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 0,
        ),
        'enteredrit' => array(
            'description' => t('Term entered RIT'),
            'type' => 'int',
            'size' => 'small',
            'not null' => true,
            'default' => 0,
        ),
        'enteredhonors' => array(
            'description' => t('Term entered Honors'),
            'type' => 'int',
            'size' => 'small',
            'not null' => true,
            'default' => 0,
        ),
        'lefthonors' => array(
            'description' => t('Term left Honors'),
            'type' => 'int',
            'size' => 'small',
            'not null' => true,
            'default' => 0,
        ),
        'checkout' => array(
            'description' => t('Expected graduation term'),
            'type' => 'int',
            'size' => 'small',
            'not null' => true,
            'default' => 0,
        ),
    ),
    'primary key' => array('username'),
);

$s['h_plans'] = array(
    'description' => t('Stores information about academic plans'),
    'fields' => array(
        'id' => array(
            'description' => t('Plan id (auto increment)'),
            'type' => 'serial',
            'not null' => true,
        ),
        'college' => array(
            'description' => t('College Abbreviation'),
            'type' => 'varchar',
            'length' => 7,
            'not null' => true,
        ),
        'plan' => array(
            'description' => t('Plan Code'),
            'type' => 'varchar',
            'length' => 20,
            'not null' => true,
        ),
        'subplan' => array(
            'description' => t('Subplan Code'),
            'type' => 'varchar',
            'length' => 20,
        ),
        'description' => array(
            'description' => t('Human readable plan name e.g. "Mechanical Engineering (BS)"'),
            'type' => 'text',
            'size' => 'tiny',
        ),
    ),
    'indexes' => array(
    ),
    'primary key' => array('id'),
);

$s['h_students_courses_peoplesoft'] = array(
    'description' => t('Stores information about courses taken'),
    'fields' => array(
        'id' => array(
            'description' => t('Auto Increment Primary key'),
            'type' => 'serial',
            'not null' => true,
        ),
        'key' => array(
            'description' => t('Course key equivalent to $username.$course.$term'),
            'type' => 'varchar',
            'length' => 24,
            'not null' => true,
        ),
        'username' => array(
            'description' => t('RIT DCE'),
            'type' => 'varchar',
            'length' => 10,
            'not null' => true,
        ),
        'course' => array(
            'description' => t('Course number'),
            'type' => 'varchar',
            'length' => 9,
            'not null' => true,
        ),
        'name' => array(
            'description' => t('Course name'),
            'type' => 'text',
            'size' => 'tiny',
            'not null' => true,
        ),
        'instructor' => array(
            'description' => t('Course instructor'),
            'type' => 'text',
            'size' => 'tiny',
            'not null' => true,
        ),
        'term' => array(
            'description' => t('Term taken'),
            'type' => 'varchar',
            'length' => 5,
            'not null' => true,
        ),
        'grade' => array(
            'description' => t("Grade (one of 'A', 'B', 'C', 'D', 'F', 'S', 'W')"),
            'type' => 'varchar',
            'length' => 1,
            'not null' => true,
        ),
        'credits' => array(
            'description' => t('Number of credits'),
            'type' => 'varchar',
            'length' => 2,
            'not null' => true,
        ),
        'honors'=> array(
            'description' => t('whether the course counts for honors points'),
            //fake Y/N enum
            'type' => 'char',
            'length' => 1,
            'not null' => true,
            'default' => 'N',
        ),
        'quartercourse'=> array(
            'description' => t('whether the course was taken under quarters'),
            //fake Y/N enum
            'type' => 'char',
            'length' => 1,
            'not null' => true,
            'default' => 'N',
        ),
    ),
    'indexes' => array(
    ),
    'primary key' => array('id'),
);



//All the old tables: students, students_courses, students_gpa, students_points
//students_waivers, complearning, continuation, notes.  (All prefixed)
$s['h_students'] = array(
    'description' => t('Table of honors students'),
    'fields' => array(
        'username' => array(
            'description' => t('RIT DCE'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 7,
        ),
        'firstname' => array(
            'description' => t('First name'),
            'type' => 'varchar',
            'length' => 20,
        ),
        'lastname' => array(
            'description' => t('Last name'),
            'type' => 'varchar',
            'length' => 20,
        ),
        'college' => array(
            'description' => t('College.  e.g. KGCOE, GCCIS'),
            'type' => 'varchar',
            'length' => 20,
        ),
        'department' => array(
            'description' => t('Major'),
            'type' => 'varchar',
            'length' => 40,
        ),
        'program' => array(
            'description' => t('e.g. BS, BS/MS, MS, PhD, etc.'),
            'type' => 'varchar',
            'length' => 40,
        ),
        'active' => array(
            'description' => t('-2=left RIT, -1=withdrawn, 0=grad, 1=active, 2=prefrosh, 3=accepted late entry, 4=deferred'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 1,
        ),
    ),
    'indexes' => array(
        'college' => array('college'),
    ),
    'primary key' => array('username'),
);
$s['h_students_courses'] = array(
    'description' => t('Honors courses.  Each student-course combination has an entry'),
    'fields' => array(
        'id' => array(
            'description' => t(''),
            'type' => 'serial',
            'not null' => true,
        ),
        'username' => array(
            'description' => t('RIT DCE'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 7,
        ),
        'course' => array(
            'description' => t('course number'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 14,
        ),
        'name' => array(
            'description' => t('couse name'),
            'type' => 'varchar',
            'length' => 50,
        ),
        'professor' => array(
            'description' => t('course instructor'),
            'type' => 'varchar',
            'length' => 30,
        ),
        'quarter' => array(
            'description' => t('term'),
            'type' => 'varchar',
            'length' => 6,
        ),
        'grade' => array(
            'description' => t('final grade'),
            'type' => 'varchar',
            'length' => 1,
        ),
        'credits' => array(
            'description' => t(''),
            'type' => 'int',
            'size' => 'tiny',
            'unsigned' => true,
        ),
        'honors' => array(
            'description' => t('whether or not this is an honors cours. Y or N'),
            'type' => 'varchar',
            'length' => 1,
        ),
    ),
    'indexes' => array(
        'term' => array('quarter'),
    ),
    'primary key' => array('id'),
);
$s['h_students_gpa'] = array(
    'description' => t('Stores GPAs for students'),
    'fields' => array(
        'username' => array(
            'description' => t('RIT DCE'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 7,
        ),
        'gpa' => array(
            'description' => t(''),
            'type' => 'int',
            'size' => 'small',
            'not null' => true,
            'default' => 0,
        ),
    ),
    'primary key' => array('username'),
);
$s['h_students_points'] = array(
    'description' => t('Honors Points'),
    'fields' => array(
        'id' => array(
            'description' => t(''),
            'type' => 'serial',
            'not null' => true,
        ),
        'username' => array(
            'description' => t('RIT DCE'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 7,
        ),
        'pointID' => array(
            'description' => t('Type of points awarded.').
                t('1=Scholarship/Research, 3=Leadership Trip, ').
                t('6=International Experiences, 7=Contract Course, ').
                t('8=College Specific Enhancements, 9=Non-required coops and Internships'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 1,
            'unsigned' => true,
        ),
        'explanation' => array(
            'description' => t('What was done to receive points'),
            'type' => 'text',
            'size' => 'small',
        ),
        'submitted' => array(
            'description' => t('Time of submission.'),
            'type' => 'datetime',
            'not null' => true
        ),
        'submittedBy' => array(
            'description' => t('Name of submitter'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 40,
        ),
        'approved' => array(
            'description' => t('pending, approved, rejected'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 0,
            'unsigned' => true,
        ),
        'approvedBy' => array(
            'description' => t('Name of reviewer'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 40,
        ),
        'approvedTime' => array(
            'description' => t(''),
            'type' => 'datetime',
            'not null' => true,
        ),
        'declinedReason' => array(
            'description' => t('reason declined, if declined'),
            'type' => 'text',
            'size' => 'small',
        ),
        'numPoints' => array(
            'description' => t('Number of points awarded'),
            'type' => 'int',
            'size' => 'tiny',
            'unsigned' => true,
        ),
    ),
    'indexes' => array(
        'approved' => array('approved'),
        'date' => array('submittedTime'),
    ),
    'primary key' => array('id'),
);
$s['h_students_waivers'] = array(
    'description' => t('Points waivers'),
    'fields' => array(
        'id' => array(
            'description' => t('Primary Key'),
            'type' => 'serial',
            'not null' => true,
        ),
        'username' => array(
            'description' => t('RIT DCE'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 7,
        ),
        'description' => array(
            'description' => t('why the points were waived'),
            'type' => 'text',
            'not null' => true,
            'size' => 'small',
        ),
        'date' => array(
            'description' => t(''),
            'type' => 'datetime',
            'not null' => true,
        ),
        'credits' => array(
            'description' => t('Number of points waived'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
        ),
    ),
    'indexes' => array(
        'date' => array('date'),
    ),
    'primary key' => array('id'),
);
$s['h_complearning'] = array(
    'description' => t('Complementary Learning.'),
    'fields' => array(
        'id' => array(
            'description' => t('Primary Key'),
            'type' => 'serial',
            'not null' => true,
        ),
        'dce' => array(
            'description' => t('RIT DCE'),
            'type' => 'text',
            'not null' => true,
            'size' => 'tiny',
        ),
        'title' => array(
            'description' => t('No one is really sure why there is a title'),
            'type' => 'varchar',
            'length' => 100,
        ),
        'date' => array(
            'description' => t('The time commitment'),
            'type' => 'text',
            'not null' => true,
            'size' => 'medium',
        ),
        'description' => array(
            'description' => t(''),
            'type' => 'text',
            'not null' => true,
            'size' => 'medium',
        ),
        'reflection' => array(
            'description' => t(''),
            'type' => 'text',
            'size' => 'medium',
        ),
        'contact' => array(
            'description' => t(''),
            'type' => 'text',
            'not null' => true,
            'size' => 'medium',
        ),
        'comments' => array(
            'description' => t(''),
            'type' => 'text',
            'size' => 'medium',
        ),
        'submitted_date' => array(
            'description' => t(''),
            'type' => 'datetime',
        ),
        'submitted_time' => array(
            'description' => t(''),
            'type' => 'datetime',
        ),
        'submitted_by' => array(
            'description' => t('DCE of submitter'),
            'type' => 'varchar',
            'length' => 7,
            'not null' => true,
        ),
        'reviewed' => array(
            'description' => t('status. 1=approved, 0=denied, -1=deleted, -2=pending'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => -2,
        ),
        'reviewed_date' => array(
            'description' => t(''),
            'type' => 'datetime',
        ),
        'reviewed_by' => array(
            'description' => t('Name of reviewer'),
            'type' => 'varchar',
            'length' => 40,
        ),
        'reason' => array(
            'description' => t('reason declined or approved'),
            'type' => 'text',
            'size' => 'small',
        ),
    ),
    'indexes' => array(
        'time' => array('submitted_date', 'submitted_time'),
        'approval' => array('reviewed'),
    ),
    'primary key' => array('id'),
);
$s['h_continuation'] = array(
    'description' => t('Continuation table'),
    'fields' => array(
        'username' => array(
            'description' => t('RIT DCE'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 7,
        ),
        'status' => array(
            'description' => t('-1=not set, 0=continued, 1=conditional continuation,
                2=warning, 3=withdrawn, 4=graduated, 5=BS/MS withdrawn,
                6=BS/MS graduated, 7=BS/MS conditional'),
            'type' => 'int',
            'size' => 'tiny',
            'default' => -1,
            'not null' => true,
        ),
        'comp_learn' => array(
            'description' => t('0=requirement met, 1=requirement not met'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 0,
            'unsigned' => true,
        ),
        'college' => array(
            'description' => t('0=requirement met, 1=requirement not met'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 0,
            'unsigned' => true,
        ),
        'courses' => array(
            'description' => t('0=requirement met, 1=requirement not met'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 0,
            'unsigned' => true,
        ),
        'gpa' => array(
            'description' => t('0=requirement met, 1=requirement not met'),
            'type' => 'int',
            'size' => 'tiny',
            'not null' => true,
            'default' => 0,
            'unsigned' => true,
        ),
    ),
    'indexes' => array(
        'status' => array('status'),
    ),
    'primary key' => array('username'),
);
$s['h_notes'] = array(
    'description' => t('I don\'t really know what this is...'),
    'fields' => array(
        'id' => array(
            'description' => t(''),
            'type' => 'serial',
            'not null' => true,
        ),
        'dce' => array(
            'description' => t('RIT DCE'),
            'type' => 'varchar',
            'not null' => true,
            'length' => 7,
        ),
        'note' => array(
            'description' => t(''),
            'type' => 'varchar',
            'length' => 250,
        ),
        'posted_by' => array(
            'description' => t(''),
            'type' => 'varchar',
            'length' => 40,
        ),
        'date' => array(
            'type' => 'datetime',
        ),
        'note_origin' => array(
            'description' => t('1=college, 0=institute'),
            'type' => 'int',
            'size' => 'tiny',
        ),
        'cont_id' => array(
            'description' => t(''),
            'type' => 'int',
        ),
        'title' => array(
            'description' => t(''),
            'type' => 'varchar',
            'length' => 40,
        ),
    ),
    'primary key' => array('id'),
);
return $s;
}
