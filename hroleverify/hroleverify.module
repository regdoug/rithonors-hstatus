<?php

//Generate module block
function hroleverify_block( $op = 'list', $delta = 0, $edit = array() ) {
    global $user;
    global $base_url;
    $block = array();
    
    //Only show if the user doesn't have the role "Honors"
    if($op == 'list') {
        $block[0]['info'] = t("Honors Role Verification");
        $block[0]['weight'] = -50;
    } elseif($op == 'view') {
        //Generate block only if it is block 0 and the user is logged in.
        if($delta == 0 && $user->uid != 0) {
            $u = user_load($user->uid);
            if( !in_array("Honors",$u->roles) && !in_array("Faculty",$u->roles)) {
                $block['subject']='In Honors?';
                $block['content']="Your access permissions do not identify you as a member of the Honors Program. If " . 
                        "you are an Honors student or faculty member, please click <a href='".$base_url."/verify_role/'</a>here</a>" . 
                        " to fix your permissions.";
            }
        }
    }
    return $block;
}

function _hroleverify_ishonors($username) {
    //This query uses username as the key to search by b/c id
    //won't be set if the user has never come here before.
    $q = "SELECT s.username
        FROM {h_students_peoplesoft} s
        WHERE s.username='%s' AND s.status=1";
    $rs = db_query($q,$username);
    if(db_fetch_array($rs)){
        return true;
    }else{
        return false;
    }
}

function _hroleverify_isfaculty($uid) {
    //This query uses username as the key to search by b/c uid
    //won't be set if the user has never come here before.
    $q = "SELECT username
        FROM {h_faculty}
        WHERE username='%s'";
    $userObj = user_load($uid);
    $rs = db_query($q,$userObj->name);
    if(db_fetch_array($rs)){
        return true;
    }else{
        return false;
    }
}

function hroleverify_menu() {
    $items['verify_role'] = array(
        'title' => 'Adding role...',
        'type' => MENU_CALLBACK,
        'access callback' => '_hroleverify_canaccess',
        'page callback' => '_hroleverify_addrole'
    );
    return $items;
}

//allow all logged in users to click the link
function _hroleverify_canaccess() {
    global $user;
    return ($user->uid != 0);
}

function _hroleverify_addrole() {
    global $user;
    global $base_url;
    
    if(!$user->name){
		$user = user_load($user);
    }
    
    if(_hroleverify_ishonors($user->name)) {
		$role = 'Honors';
        $rid = _hroleverify_rid($role);
		if($rid < 0){
		    drupal_set_message("Your system seems to be misconfigured...",'error');
		    drupal_goto($base_url);
		    return;
		}
        $user->roles[$rid] = $role;
	
        watchdog('haddrole','Adding role "%role" to user @name',array('@name' => $user->name,'%role'=>$role));
        
        user_save($user, array('roles'=>$user->roles));
	
		//save the UID to the h_students_peoplesoft table
		db_query("UPDATE {h_students_peoplesoft} SET id=%d WHERE username='%s'",$user->uid,$user->name);
		drupal_set_message('The role "Honors" has been successfully added to your profile');
    }
    elseif(_hroleverify_isfaculty($user->name)) {
		$role = 'Faculty';
        $rid = _hroleverify_rid($role);
		if($rid < 0){
		    drupal_set_message("Your system seems to be misconfigured...",'error');
		    drupal_goto($base_url);
		    return;
		}
        $user->roles[$rid] = $role;
        
        watchdog('haddrole','Adding role "%role" to user @name',array('@name' => $user->name,'%role'=>$role));
        
        user_save($user, array('roles'=>$user->roles));
	
		//save the UID to the h_faculty table
		db_query("UPDATE {h_faculty} SET uid=%d WHERE username='%s'",$user->uid,$user->name);
		drupal_set_message('The role "Faculty" was successfully added to your profile');
    }
    
    drupal_goto($base_url);
}

//The following function and comments copied from haddrole
//on 12/14/2012:

//private function to get the role id.
//purpose is purely for code clarity.
function _hroleverify_rid($role){
    if(!preg_match('/^[\\w\\s]+$/',$role)){
	return -1;
    }else{
	$variable = 'hroleverify_rid_'.strtolower(str_replace(' ', '_', $role));
	//variable_get retrieves system variables.  here we retrieve our variable 'haddrole_rid'
	$rid = variable_get($variable,0);
	
	//the variable wasn't set in the database
	//this means that we haven't ever tried to retrieve the role.
	if ($rid == 0){ 
		$rs = db_query("SELECT rid FROM {role} WHERE name = '%s'",$role);
		if($result = db_fetch_object($rs)){
			$rid = $result->rid;
		}else{//there is no role called '$role'
			//set rid to -1 so that we don't check again.
			$rid = -1;
		}
		variable_set($variable,$rid);
	}
	return $rid;
    }
}
